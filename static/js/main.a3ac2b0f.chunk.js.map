{"version":3,"sources":["components/StyledComponents.js","pages/Events.jsx","pages/Home.jsx","components/NavBar.jsx","components/SideBarMenuItems.jsx","App.js","pages/Links.jsx","pages/Contact.jsx","serviceWorker.js","index.js"],"names":["JumboHeader","styled","Header","Jumbotron","div","props","src","fullHeight","JumboMessage","Events","console","log","Container","size","inverted","Segment","class","data-artist-name","data-display-local-dates","data-display-past-dates","data-auto-style","data-text-color","data-link-color","data-background-color","data-display-limit","data-display-start-time","data-link-text-color","data-display-lineup","data-display-play-my-city","data-separator-color","Home","as","style","color","Divider","hidden","withRouter","FixedMenu","Menu","FixedHamburgerMenu","Responsive","secondary","onlyMobile","Item","Icon","name","sideBarIsOpen","onClick","setVisible","onlyTablet","onlyComputer","Link","active","location","pathname","to","icon","routes","path","Component","backgroundImage","backgroundPosition","text","textAlign","Table","basic","celled","Row","HeaderCell","Body","Cell","Embed","url","Form","action","method","Input","required","label","placeholder","type","TextArea","Button","Boolean","window","hostname","match","ReactDOM","render","useState","visible","Sidebar","Pushable","animation","onHide","vertical","width","pointing","Pusher","className","e","map","key","exact","CSSTransition","in","timeout","classNames","unmountOnExit","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3ac2b0f.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Header } from 'semantic-ui-react'\n\nexport const JumboHeader = styled(Header)`\n        font-size: 5rem;\n        color: white;\n        // text-shadow: 1px 1px 1px black;\n        width: 100%;\n        z-index:3!important;\n       \n\n    `\n\nexport const Jumbotron = styled.div`\n    background-position: right 0% top 0% !important;\n    background-size: contain !important;\n    background-repeat: no-repeat !important;\n     background: ${props => `url('${props.src}')`};\n     height: ${props => props.fullHeight ? \"85vh !important\" : \"40vh\"};\n    display: grid;\n}\n`\nexport const JumboMessage = styled.div`\n    background-color: rgba(0,0,0,0) !important;\n    // align-self: center;\n    margin-top: 50vh;\n    justify-self: ;\n    padding: 2rem;\n\n\n\n\n\n`","import React from 'react'\nimport { Container, Segment, Header } from 'semantic-ui-react'\n\nexport default function Events() {\n    console.log('events')\n\n    return <Container>\n        <Header size=\"huge\" inverted>Events</Header>\n        <Segment inverted>\n            <a\n                class=\"bit-widget-initializer\"\n                // data-artist-name=\"Deborah%20de%20Graaff\"\n                data-artist-name=\"Louis Cole\"\n                data-display-local-dates=\"false\"\n                data-display-past-dates=\"true\"\n                data-auto-style=\"false\"\n                data-text-color=\"#FFFFFF\"\n                data-link-color=\"#ffcc51\"\n                data-background-color=\"rgba(0,0,0,0)\"\n                data-display-limit=\"15\"\n                data-display-start-time=\"false\"\n                data-link-text-color=\"#ffffff\"\n                data-display-lineup=\"false\"\n                data-display-play-my-city=\"true\"\n                data-separator-color=\"rgba(124,124,124,0.25)\" />\n\n\n        </Segment>\n    </Container>\n}","import React from 'react'\nimport { Header, Label, Item, Container, Divider } from 'semantic-ui-react'\nimport { JumboHeader, JumboMessage, Jumbotron } from '../components/StyledComponents'\nimport Events from './Events'\n\n\nfunction Home() {\n\n    return <>\n        <Jumbotron fullHeight src=\"/images/headshot2.jpeg\" >\n            <JumboMessage  >\n\n                <JumboHeader size=\"huge\" as={\"h1\"} inverted>Deborah <span style={{ color: \"#FFCC51\" }}>de</span> Graaff</JumboHeader>\n                {/* <JumboHeader size=\"huge\" as={\"h1\"} inverted>de Graaff</JumboHeader> */}\n                {/* <Header.Subheader style={{ color: \"white\" }} as=\"h3\">Deborah de Graaff</Header.Subheader> */}\n\n\n            </JumboMessage>\n            {/* <Label style={{ alignSelf: \"flex-end\", justifySelf: \"flex-start\", color: \"white\", backgroundColor: \"rgba(0,0,0,0)\", visibility: \"hidden\" }} size=\"big\" content=\"scroll\" icon=\"arrow up\" /> */}\n        </Jumbotron>\n\n        <Divider hidden />\n\n        <Events />\n\n    </>\n\n}\n\nexport default Home","import React from 'react'\nimport { Menu, Icon, Responsive } from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport { Link, withRouter } from 'react-router-dom'\n\nfunction NavBar(props) {\n\n    const FixedMenu = styled(Menu)`\n        z-index:1;\n        position: fixed;\n        width: 100vw;\n        // background-color: rgba(255,255,255,.8) !important;\n    `\n    const FixedHamburgerMenu = styled(Menu)`\n        z-index:1;\n        position: fixed;\n        width: 100vw;\n        background-color: rgba(0,0,0,0) !important;\n        border: 2px solid red;\n    `\n    return <>\n\n\n        <Responsive secondary as={FixedHamburgerMenu} {...Responsive.onlyMobile}>\n            <Menu.Item >\n                <Icon size=\"big\" inverted name={props.sideBarIsOpen ? \"close\" : \"bars\"} onClick={() => props.setVisible(true)} />\n            </Menu.Item>\n        </Responsive>\n        < Responsive secondary as={FixedHamburgerMenu} {...Responsive.onlyTablet}>\n            <Menu.Item>\n                <Icon size=\"big\" inverted name={props.sideBarIsOpen ? \"close\" : \"bars\"} onClick={() => props.setVisible(true)} />\n            </Menu.Item>\n        </Responsive >\n        <Responsive inverted secondary as={FixedMenu}  {...Responsive.onlyComputer}>\n            <Menu.Item as={Link} active={props.location.pathname === '/'} to='/' icon='home' name='home' />\n            <Menu.Item as={Link} active={props.location.pathname === '/contact'} to=\"/contact\" icon=\"mail\" name='Contact' />\n            <Menu.Item as={Link} active={props.location.pathname === '/links'} to=\"/links\" icon=\"chain\" name='Links & Resources' />\n        </Responsive>\n    </>\n}\n\nexport default withRouter(NavBar)","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Menu } from 'semantic-ui-react'\n\nfunction SideBarMenuItems(props) {\n    return <>\n        <Menu.Item active={props.location.pathname === '/'} as={Link} to='/' icon='home' name='home' />\n        <Menu.Item active={props.location.pathname === '/contact'} as={Link} to=\"/contact\" icon=\"mail\" name='Contact' />\n        <Menu.Item active={props.location.pathname === '/links'} as={Link} to=\"/links\" icon=\"chain\" name='Links & Resources' />\n    </>\n}\n\nexport default withRouter(SideBarMenuItems)\n\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom'\nimport { CSSTransition } from 'react-transition-group'\nimport Home from './pages/Home'\nimport Links from './pages/Links'\nimport Contact from './pages/Contact'\nimport Events from './pages/Events'\n\nimport NavBar from './components/NavBar'\nimport SideBarMenuItems from './components/SideBarMenuItems'\nimport { Sidebar, Menu } from 'semantic-ui-react'\n\nconst routes = [\n  { path: '/', name: 'Home', Component: Home },\n  { path: '/links', name: 'Links', Component: Links },\n  { path: '/contact', name: 'Contact', Component: Contact },\n  { path: '/events', name: 'Events', Component: Events },\n]\n\nexport default function App() {\n  const [visible, setVisible] = useState(false)\n\n\n  return (\n    <Router>\n      <Route>\n        <Sidebar.Pushable as='div'>\n          <Sidebar\n            as={Menu}\n            animation='push'\n            icon='labeled'\n            onHide={() => setVisible(false)}\n            vertical\n            visible={visible}\n            width='thin'\n            pointing\n            inverted\n          >\n            <SideBarMenuItems />\n            {/* <Menu.Item as={Link} to='/' icon='home' name='home' />\n            <Menu.Item as={Link} to=\"/contact\" icon=\"mail\" name='Contact' />\n            <Menu.Item as={Link} to=\"/links\" icon=\"chain\" name='Links & Resources' /> */}\n          </Sidebar>\n\n          <Sidebar.Pusher className=\"appContainer\">\n            <NavBar sideBarIsOpen={visible} setVisible={(e) => setVisible(e)} />\n\n            {routes.map(({ path, Component }) => (\n              <Route key={path} exact path={path}>\n                {({ match }) => (\n                  <CSSTransition\n                    in={match != null}\n                    timeout={300}\n                    classNames=\"page\"\n                    unmountOnExit\n                  >\n                    <div className=\"page\">\n                      <Component />\n                    </div>\n                  </CSSTransition>\n                )}\n\n              </Route>\n            ))}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Route>\n    </Router>\n  )\n}\n\n","import React from 'react'\nimport { Table, Container } from 'semantic-ui-react'\nimport { Jumbotron } from '../components/StyledComponents'\n\nexport default function Links() {\n    return <>\n        <Jumbotron style={{ backgroundImage: `url('https://storage.googleapis.com/inner_wisdom_bucket/ancient-art-asia-302100.jpg') `, backgroundPosition: \"center\" }} />\n\n\n\n        <Container text textAlign=\"center\">\n            <h1>Links</h1>\n            <Table basic='very' celled >\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Organisation</Table.HeaderCell>\n                        <Table.HeaderCell>Phone Number</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    <Table.Row>\n                        <Table.Cell>Lifeline</Table.Cell>\n                        <Table.Cell>13 11 14</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Headspace – For young people 12-25 </Table.Cell>\n                        <Table.Cell>1800 650 890</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Anxiety Disorders Information & Support Line </Table.Cell>\n                        <Table.Cell>1300 794 992</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Mensline 24/7</Table.Cell>\n                        <Table.Cell>1300 789 978</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Sexual assault counselling</Table.Cell>\n                        <Table.Cell>1800 806 292</Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.Cell>Women's DV Helpline</Table.Cell>\n                        <Table.Cell>1800 007 339</Table.Cell>\n                    </Table.Row>\n                </Table.Body>\n            </Table>\n        </Container>\n    </>\n\n}","import React from 'react'\nimport { Embed, Container, Form, Button } from 'semantic-ui-react'\nimport { Jumbotron } from '../components/StyledComponents'\n\n\nexport default function Contact() {\n\n\n    return <>\n        <Jumbotron style={{ backgroundImage: `url('https://storage.googleapis.com/inner_wisdom_bucket/ancient-art-asia-302100.jpg') `, backgroundPosition: \"center\" }} />\n\n        <Container>\n            <h1>Contact Page</h1>\n            <Embed\n                active\n                icon='map'\n                // placeholder='/images/image-16by9.png'\n                url='https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d848307.3784013895!2d150.37010698248696!3d-33.84582855426672!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x6b129838f39a743f%3A0x3017d681632a850!2sSydney%20NSW!5e0!3m2!1sen!2sau!4v1575331083966!5m2!1sen!2sau'\n            />\n\n            <Form action=\"https://formspree.io/olinelson93@gmail.com\" method=\"POST\">\n                <h1>Contact</h1>\n                <Form.Input required label=\"Full Name\" name=\"name\" placeholder=\"Mike Nock\" />\n                <Form.Input required label=\"Email\" name=\"email\" type=\"email\" placeholder=\"pocket_science@gmail.com\" />\n\n                <Form.TextArea required name=\"message\" label=\"Message\" placeholder=\"It Was the Best of Times; It Was the Worst of Times...\" />\n                <Button type=\"submit\">Send</Button>\n            </Form>\n        </Container>\n    </>\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport './App.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}